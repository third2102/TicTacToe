// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`square matches the snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <square
    isZardoz="ZARDOZ"
    value="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "isZardoz": "ZARDOZ",
      "value": "test",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="square "
      >
        <div
          class="testZARDOZ"
        />
         
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="testZARDOZ"
          />,
          " ",
        ],
        "className": "square ",
        "onClick": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="testZARDOZ"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "testZARDOZ",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "div",
        },
        " ",
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "isZardoz": "ZARDOZ",
        "value": "test",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="square "
        >
          <div
            class="testZARDOZ"
          />
           
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="testZARDOZ"
            />,
            " ",
          ],
          "className": "square ",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="testZARDOZ"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "testZARDOZ",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "div",
          },
          " ",
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
